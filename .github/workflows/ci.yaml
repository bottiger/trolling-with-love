name: 'CI/CD Pipeline'

on:
  push:
    branches:
      - main
    tags:
      - v*
  workflow_dispatch:

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "web-ext build"
        id: web-ext-build
        uses: kewisch/action-web-ext@v1
        with:
          cmd: build
          source: src
          filename: "{name}-{version}.xpi"
        env:
          WEB_EXT_FILENAME: "{name}-{version}.xpi"

      - name: Print filename
        run: echo "The generated file is ${{ env.WEB_EXT_FILENAME }}"


  release:
    runs-on: ubuntu-latest
    needs: build  # Ensure the build job completes first

    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "web-ext build"
        id: web-ext-build
        uses: kewisch/action-web-ext@v1
        with:
          cmd: build
          source: src
          filename: "{name}-{version}.xpi" 

      - name: "Web Ext Sign"
        id: web-ext-sign
        uses: kewisch/action-web-ext@v1
        with:
          cmd: sign
          source: ${{ steps.web-ext-build.outputs.target }}
          channel: listed
          apiKey: ${{ secrets.AMO_SIGN_KEY }}
          apiSecret: ${{ secrets.AMO_SIGN_SECRET }}
          timeout: 900000

#      - name: "Upload Artifact"
#        uses: actions/upload-artifact@v4
#        with:
#          name: {name}-{version}.xpi
#          path: ${{ steps.web-ext-build.outputs.target }}
#          if-no-files-found: error

#  release:
#    needs: build
#    name: "Release"
#    runs-on: ubuntu-latest
#    steps:
#      - name: "Download Artifact"
#        uses: actions/download-artifact@v3
#        with:
#          name: {name}-{version}.xpi
#          path: dist
#    
#      - name: "Create Release"
#        uses: softprops/action-gh-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          files: ./dist/*
#          tag_name: ${{ github.ref_name }}